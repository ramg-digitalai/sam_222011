---
apiVersion: xl-release/v1
kind: Templates
metadata:
  path: Workflows/Digital.ai Deploy
  home: Digital.ai - Official/Workflows/Digital.ai Deploy
spec:
- template: Websphere JaasAlias setup with Digital.ai Deploy
  description: "Easily create an application in Digital.ai Deploy that can be used\
    \ to create a JaasAlias in a remote Websphere Server, including its respective\
    \ environment and infrastructure setup."
  scheduledStartDate: 2023-02-14T09:00:00+05:30
  dueDate: 2023-02-14T10:00:00+05:30
  phases:
  - phase: Setup Infra and Env
    tasks:
    - name: Specify Deploy Server Details
      type: xlrelease.UserInputTask
      description: Select the Digital.ai Deploy Server Connection onto which the Websphere
        application has to be created. You can create a new connection if you have
        not created one.
      variables:
      - deployServer
    - name: Specify Environment Name
      type: xlrelease.UserInputTask
      description: Specify a name for the environment CI that should be created for
        AWS in Digital.ai Deploy server.
      variables:
      - environmentName
    - name: Create Environment
      type: deploy.CreateCI
      description: Creates an Environment CI in Digital.ai Deploy Server.
      variableMapping:
        server: "${deployServer}"
      capabilities:
      - remote
      ciID: "Environments/${environmentName}"
      ciType: udm.Environment
      jsonDescriptor: "{}"
    - name: Specify WAS Host Parameters
      type: xlrelease.UserInputTask
      description: Specify the SSH connection details to connect to the Webshere hosting
        machine.
      variables:
      - hostIdentifier
      - sudoUsername
      - os
      - connectionType
      - address
      - sshUsername
      - sshPassword
    - name: Configure Remote Host
      type: deploy.CreateCI
      description: Creates an Overthere SSH host CI in Digital.ai Deploy Server using
        the details specified in the previous step.
      variableMapping:
        server: "${deployServer}"
      capabilities:
      - remote
      ciID: "Infrastructure/${hostIdentifier}"
      ciType: overthere.SshHost
      jsonDescriptor: |-
        {
            "stagingDirectoryPath":"",
            "sudoUsername":"${sudoUsername}",
            "suUsername":"",
            "suPassword":"",
            "os":"${os}",
            "connectionType":"${connectionType}",
            "address":"${address}",
            "port":22,
            "username":"${sshUsername}",
            "privateKeyFile":"",
            "passphrase":""
        }
    - name: Set WAS Host Credentials
      type: deploy.UpdateCIPropertyWithSecretValue
      description: Sets the SSH password in the previously created Host CI in Digital.ai
        Deploy server.
      variableMapping:
        propertyValue: "${sshPassword}"
        server: "${deployServer}"
      capabilities:
      - remote
      ciID: "Infrastructure/${hostIdentifier}"
      ciProperty: password
    - name: Check Remote Host Connection
      type: deploy.ControlTask
      description: Runs a Check Connection control task on the created SSH host CI
        in the Digital.ai Deploy server to validate the specified credentials.
      variableMapping:
        server: "${deployServer}"
      capabilities:
      - remote
      ciId: "Infrastructure/${hostIdentifier}"
      taskName: checkConnection
      numberOfContinueRetrials: 0
      pollingInterval: 10
      numberOfPollingTrials: 0
      displayStepLogs: true
      connectionRetries: 10
    - name: Specify WAS Deployment Manager Parameters
      type: xlrelease.UserInputTask
      description: Specify the connection details for Webshere.
      variables:
      - cellName
      - wasHome
      - wasUsername
      - wasPassword
    - name: Configure Websphere Deployment Manager
      type: deploy.CreateCI
      description: Creates a Websphere Deployment Manager CI in the Digital.ai Deploy
        server using the details specified in the previous tasks.
      variableMapping:
        server: "${deployServer}"
      capabilities:
      - remote
      ciID: "Infrastructure/${hostIdentifier}/${cellName}"
      ciType: was.DeploymentManager
      jsonDescriptor: |-
        {
            "wasHome": "${wasHome}",
            "username": "${wasUsername}",
            "version": "WAS_90"
        }
      addToEnvironment: true
      envID: "Environments/${environmentName}"
    - name: Set Websphere Credentials
      type: deploy.UpdateCIPropertyWithSecretValue
      description: Sets the Websphere password in the previously created Deployment
        Manager CI.
      variableMapping:
        propertyValue: "${wasPassword}"
        server: "${deployServer}"
      capabilities:
      - remote
      ciID: "Infrastructure/${hostIdentifier}/${cellName}"
      ciProperty: password
    - name: Specify WAS Node Agent Parameters
      type: xlrelease.UserInputTask
      description: Specify the name of the Websphere Node Agent CI to be created in
        Digital.ai Deploy Server.
      variables:
      - nodeName
    - name: Configure Websphere Node Agent
      type: deploy.CreateCI
      description: Creates a Websphere Node Agent CI in the Digital.ai Deploy server.
      variableMapping:
        server: "${deployServer}"
      capabilities:
      - remote
      ciID: "Infrastructure/${hostIdentifier}/${cellName}/${nodeName}"
      ciType: was.NodeAgent
      jsonDescriptor: "{}"
      addToEnvironment: true
      envID: "Environments/${environmentName}"
    - name: Specify WAS Server Parameters
      type: xlrelease.UserInputTask
      description: Specify the name of the Websphere Server CI to be created in the
        Digital.ai Deploy server.
      variables:
      - serverName
    - name: Configure Websphere Server
      type: deploy.CreateCI
      description: Creates a Websphere Server CI in the Digital.ai Deploy server.
      variableMapping:
        server: "${deployServer}"
      capabilities:
      - remote
      ciID: "Infrastructure/${hostIdentifier}/${cellName}/${nodeName}/${serverName}"
      ciType: was.ManagedServer
      jsonDescriptor: "{}"
      addToEnvironment: true
      envID: "Environments/${environmentName}"
    color: '#3d6c9e'
  - phase: Setup Application
    tasks:
    - name: Specify WAS Application Name
      type: xlrelease.UserInputTask
      description: Specify the name of the application to be created in the Digital.ai
        Deploy server.
      variables:
      - applicationName
    - name: Create Application
      type: deploy.CreateCI
      description: Creates an application with the specified name in the Digital.ai
        Deploy server.
      variableMapping:
        server: "${deployServer}"
      capabilities:
      - remote
      ciID: "Applications/${applicationName}"
      ciType: udm.Application
      jsonDescriptor: "{}"
    - name: Specify Deployment Package
      type: xlrelease.UserInputTask
      description: Specify a package name to be created within the application created
        in Digital.ai Deploy server in the previous step.
      variables:
      - packageName
    - name: Create Deployment Package
      type: deploy.CreateCI
      description: Creates a deployment package with the specfied name in the application
        created in Digital.ai Deploy server.
      variableMapping:
        server: "${deployServer}"
      capabilities:
      - remote
      ciID: "Applications/${applicationName}/${packageName}"
      ciType: udm.DeploymentPackage
      jsonDescriptor: "{}"
    - name: Specify WAS JaasAliasSpec Parameters
      type: xlrelease.UserInputTask
      description: Specify the JASS Alias name and password. this will be used to
        create the application package in the Digital.ai Deploy server.
      variables:
      - jaasUsername
      - jaasPassword
    - name: Create Sample WAS JaasAliasSpec
      type: deploy.CreateCI
      description: Creates the JASS AliasSpec CI in the application package in Digital.ai
        Deploy server.
      variableMapping:
        server: "${deployServer}"
      capabilities:
      - remote
      ciID: "Applications/${applicationName}/${packageName}/${jaas-alias-name}"
      ciType: was.JaasAliasSpec
      jsonDescriptor: |-
        {
        "username": "${jaasUsername}"
        }
    - name: Set JaasAlias Password
      type: deploy.UpdateCIPropertyWithSecretValue
      description: Sets the sensitive password information in the created JAAS AliasSpec
        CI created in the previous step.
      variableMapping:
        propertyValue: "${jaasPassword}"
        server: "${deployServer}"
      capabilities:
      - remote
      ciID: "Infrastructure/${hostIdentifier}"
      ciProperty: password
    - name: Add managed application
      type: managedApplications.CreateApplication
      applicationName: "${applicationName}"
      managedBy: Digital.ai Deploy
      environmentTag: "${environmentName}"
      applicationReference: "${applicationName}"
      description: Adds the created Websphere application to the Digital.ai Release
        managed application list.
      variableMapping:
        pythonScript.connectionServer: "${deployServer}"
        pythonScript.managedApplicationId: "${managedApplicationId}"
    color: '#3d6c9e'
  kind: WORKFLOW
  categories:
  - Application onboarding
  variables:
  - type: xlrelease.StringVariable
    key: environmentName
    description: Name of the environment CI in Deploy
    value: was-env
  - type: xlrelease.StringVariable
    key: hostIdentifier
    description: Name of the Host CI in Deploy
    value: was-host
  - type: xlrelease.StringVariable
    key: os
    description: Operating system of the remote host
    value: UNIX
  - type: xlrelease.StringVariable
    key: address
    description: Address of the webpshere host
    value: 1.2.3.4
  - type: xlrelease.StringVariable
    key: connectionType
    description: Connection type to the websphere host
    value: SUDO
  - type: xlrelease.StringVariable
    key: sshUsername
    description: SSH username to remote host
    value: ssh-username
  - type: xlrelease.PasswordStringVariable
    key: sshPassword
    showOnReleaseStart: false
    description: SSH password to the remote host
  - type: xlrelease.StringVariable
    key: sudoUsername
    description: SUDO username for the SSH connection
    value: sudo-username
  - type: xlrelease.StringVariable
    key: applicationName
    description: Name of the application CI in Deploy
    value: was-application
  - type: xlrelease.StringVariable
    key: packageName
    description: Name of the application package in Deploy
    value: "1.0"
  - type: xlrelease.StringVariable
    key: cellName
    description: Websphere Cell name
    value: was-cell-1
  - type: xlrelease.StringVariable
    key: wasHome
    description: Websphere installation directory
    value: /opt/IBM/WebSphere/AppServer-1/profiles/Dmgr01
  - type: xlrelease.StringVariable
    key: wasUsername
    description: Webpshere username
    value: admin
  - type: xlrelease.PasswordStringVariable
    key: wasPassword
    showOnReleaseStart: false
    description: Websphere password
  - type: xlrelease.StringVariable
    key: wasVersion
    description: Version of Websphere installation
    value: WAS_90
  - type: xlrelease.StringVariable
    key: nodeName
    description: Websphere node name
    value: was-node-1
  - type: xlrelease.StringVariable
    key: serverName
    description: Websphere server name
    value: was-server-1
  - type: xlrelease.StringVariable
    key: jaasUsername
    description: JAAS Alias username
    value: admin
  - type: xlrelease.PasswordStringVariable
    key: jaasPassword
    showOnReleaseStart: false
    description: JAAS Alias password
  - type: xlrelease.ReferenceVariable
    key: deployServer
    showOnReleaseStart: false
    label: Deploy Server
    description: Connection to the Deploy server
    referencedType: digitalai.DeployServer
  - type: xlrelease.StringVariable
    key: jaas-alias-name
    description: JAAS Alias name
    value: Sample JAAS Alias
  - type: xlrelease.StringVariable
    key: managedApplicationId
    requiresValue: false
    showOnReleaseStart: false
    label: Application ID
    description: Application ID in Digital.ai Release
  disableNotifications: true
  author: Digital.ai
  logo:
    type: xlrelease.TemplateLogo
    contentType: image/svg+xml
    file: !file "template-logo/9dda4235a32e0a48f98fd815771690a722aeb812/deploy.svg"
  defaultTargetFolder: Digital.ai - Official/Workflow Executions
