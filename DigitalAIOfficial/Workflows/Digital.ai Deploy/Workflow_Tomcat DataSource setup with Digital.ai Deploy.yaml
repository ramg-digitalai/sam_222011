---
apiVersion: xl-release/v1
kind: Templates
metadata:
  path: Workflows/Digital.ai Deploy
  home: Digital.ai - Official/Workflows/Digital.ai Deploy
spec:
- template: Tomcat DataSource setup with Digital.ai Deploy
  description: "Easily create an application in Digital.ai Deploy that can be used\
    \ to create a DataSource in a Remote Tomcat Server, including its respective environment\
    \ and infrastructure setup."
  scheduledStartDate: 2023-03-23T09:00:00+05:30
  dueDate: 2023-03-23T10:00:00+05:30
  phases:
  - phase: Setup Infra and Env
    tasks:
    - name: Specify Deploy Server Details
      type: xlrelease.UserInputTask
      description: Select the Digital.ai Deploy Server Connection onto which the Tomcat
        application has to be created. You can create a new connection if you have
        not created one.
      variables:
      - deployServer
    - name: Specify Environment Name
      type: xlrelease.UserInputTask
      description: Specify the name of the environment CI to be created in the Digital.ai
        Deploy Server.
      variables:
      - environmentName
    - name: Create Environment
      type: deploy.CreateCI
      description: Creates an environment CI with the given name in the Digital.ai
        Deploy Server.
      variableMapping:
        server: "${deployServer}"
      capabilities:
      - remote
      ciID: "Environments/${environmentName}"
      ciType: udm.Environment
      jsonDescriptor: "{}"
    - name: Specify Tomcat Host Parameters
      type: xlrelease.UserInputTask
      description: Specify the SSH connection details to the host where the Tomcat
        installation resides.
      variables:
      - hostIdentifier
      - sudoUsername
      - os
      - address
      - port
      - sshUsername
      - sshPrivatekey
    - name: Configure Remote Host
      type: deploy.CreateCI
      description: Creates an Overthere SSH Host CI in the Digital.ai Deploy Server
        with the details specified in the previous step.
      variableMapping:
        server: "${deployServer}"
      capabilities:
      - remote
      ciID: "Infrastructure/${hostIdentifier}"
      ciType: overthere.SshHost
      jsonDescriptor: |-
        {
            "stagingDirectoryPath":"",
            "sudoUsername":"${sudoUsername}",
            "suUsername":"",
            "suPassword":"",
            "os":"${os}",
            "connectionType":"SUDO",
            "address":"${address}",
            "port":"${port}",
            "username":"${sshUsername}",
            "password":"",
            "privateKeyFile":"${sshPrivatekey}",
            "passphrase":""
        }
      addToEnvironment: true
      envID: "Environments/${environmentName}"
    - name: Check Remote Host Connection
      type: deploy.ControlTask
      description: Runs a Check Connection control task on the created SSH host CI
        in the Digital.ai Deploy server to validate the specified credentials.
      variableMapping:
        server: "${deployServer}"
      capabilities:
      - remote
      ciId: "Infrastructure/${hostIdentifier}"
      taskName: checkConnection
      numberOfContinueRetrials: 0
      pollingInterval: 10
      numberOfPollingTrials: 0
      displayStepLogs: true
      connectionRetries: 10
    - name: Specify Tomcat Server Parameters
      type: xlrelease.UserInputTask
      description: Specify the Tomcat installation details.
      variables:
      - serverName
      - tomcatHome
      - tomcatStartCommand
      - tomcatStopCommand
      - tomcatStatusCommand
      - tomcatStatusExptectedOutput
    - name: Configure Tomcat Server
      type: deploy.CreateCI
      description: Creates an Tomcat server CI in the Digital.ai Deploy Server with
        the details specified in the previous step.
      variableMapping:
        server: "${deployServer}"
      capabilities:
      - remote
      ciID: "Infrastructure/${hostIdentifier}/${serverName}"
      ciType: tomcat.Server
      jsonDescriptor: |-
        {
            "home":"${tomcatHome}",
            "startCommand":"${tomcatStartCommand}",
            "stopCommand":"${tomcatStopCommand}",
            "statusCommand":"${tomcatStatusCommand}",
            "statusCommandExpectedOutput":"${tomcatStatusExptectedOutput}",
            "startWaitTime":"0",
            "stopWaitTime":"0",
            "serverStartupTime":"0",
            "serverShutdownTime":"0",
            "tomcatRunningPort":""
        }
      addToEnvironment: true
      envID: "Environments/${environmentName}"
    - name: Check Tomcat Status
      type: deploy.ControlTask
      description: Runs a Check Status control task on the created Tomcat server CI
        in the Digital.ai Deploy server to validate the specified credentials.
      variableMapping:
        server: "${deployServer}"
      capabilities:
      - remote
      ciId: "Infrastructure/${hostIdentifier}/${serverName}"
      taskName: status
      numberOfContinueRetrials: 0
      pollingInterval: 10
      numberOfPollingTrials: 0
      displayStepLogs: true
      connectionRetries: 10
    - name: Specify Tomcat Virtual Host Name
      type: xlrelease.UserInputTask
      description: Specify the name of the virtual host CI to be created within the
        Tomcat serverCI in Digital.ai Deploy server.
      variables:
      - virtualHostName
    - name: Configure Tomcat VirtualHost
      type: deploy.CreateCI
      description: Creates an Tomcat VirtualHost CI in the Digital.ai Deploy Server
        with the details specified in the previous step.
      variableMapping:
        server: "${deployServer}"
      capabilities:
      - remote
      ciID: "Infrastructure/${hostIdentifier}/${serverName}/${virtualHostName}"
      ciType: tomcat.VirtualHost
      jsonDescriptor: "{}"
      addToEnvironment: true
      envID: "Environments/${environmentName}"
  - phase: Setup Application
    tasks:
    - name: Specify Application Name
      type: xlrelease.UserInputTask
      description: Specify the name of the application to be created in the Digital.ai
        Deploy server.
      variables:
      - applicationName
    - name: Setup Application
      type: deploy.CreateCI
      description: Creates an application with the specified name in the Digital.ai
        Deploy server.
      variableMapping:
        server: "${deployServer}"
      capabilities:
      - remote
      ciID: "Applications/${applicationName}"
      ciType: udm.Application
      jsonDescriptor: "{}"
    - name: Specify Package Name
      type: xlrelease.UserInputTask
      description: Specify a package name to be created within the application created
        in Digital.ai Deploy server in the previous step.
      variables:
      - packageName
    - name: Create Deployment Package
      type: deploy.CreateCI
      description: Creates a deployment package with the specfied name in the application
        created in Digital.ai Deploy server.
      variableMapping:
        server: "${deployServer}"
      capabilities:
      - remote
      ciID: "Applications/${applicationName}/1.0"
      ciType: udm.DeploymentPackage
      jsonDescriptor: "{}"
    - name: Specify Tomcat Datasource
      type: xlrelease.UserInputTask
      description: "Specify the Tomcat dataSource inforrmation, which will be used\
        \ to create a DataSourceSpec CI in Digital.ai Deploy server."
      variables:
      - datasourceName
      - jndiName
      - datasourceContext
      - databaseDriverClassName
      - databaseUrl
      - dbUsername
      - dbPassword
    - name: Create Sample Tomcat DataSourceSpec
      type: deploy.CreateCI
      description: Creates the Tomcat DataSource CI in the Digital.ai Deploy server
        with the details specified in the previous step.
      variableMapping:
        server: "${deployServer}"
      capabilities:
      - remote
      ciID: "Applications/${applicationName}/${packageName}/${datasourceName}"
      ciType: tomcat.DataSourceSpec
      jsonDescriptor: |-
        {
            "context":"${datasourceContext}",
            "jndiName":"${jndiName}",
            "driverClassName":"${databaseDriverClassName}",
            "url":"${databaseUrl}",
            "username":"${dbUsername}",
            "password":"${dbPassword}"
        }
    - name: Add managed application
      type: managedApplications.CreateApplication
      applicationName: "${applicationName}"
      managedBy: Digital.ai Deploy
      environmentTag: "${environmentName}"
      applicationReference: "${applicationName}"
      description: Adds the created Azure Resource Group application to the Digital.ai
        Release managed application list.
      variableMapping:
        pythonScript.connectionServer: "${deployServer}"
        pythonScript.managedApplicationId: "${managedApplicationId}"
    color: '#3d6c9e'
  kind: WORKFLOW
  categories:
  - Application onboarding
  variables:
  - type: xlrelease.StringVariable
    key: environmentName
    description: Name of the environment CI in Deploy
    value: tomcat-env
  - type: xlrelease.StringVariable
    key: hostIdentifier
    description: Name of the SSH host CI to be created in Digital.ai Deploy server
    value: tomcat-host
  - type: xlrelease.StringVariable
    key: address
    description: SSH host address
    value: 1.2.3.4
  - type: xlrelease.StringVariable
    key: os
    description: UNIX|WINDOWS|ZOS
    value: UNIX
  - type: xlrelease.StringVariable
    key: port
    description: SSH port
    value: "22"
  - type: xlrelease.StringVariable
    key: sshPrivatekey
    description: Path to the SSH key file
    value: private-key-path
  - type: xlrelease.StringVariable
    key: sshUsername
    description: SSH username
    value: ssh-username
  - type: xlrelease.StringVariable
    key: sudoUsername
    description: SUDO username
    value: sudo-username
  - type: xlrelease.StringVariable
    key: applicationName
    description: Name of the application CI in Deploy
    value: tomcat-app
  - type: xlrelease.StringVariable
    key: packageName
    description: Name of the application package in Deploy
    value: "1.0"
  - type: xlrelease.StringVariable
    key: tomcatHome
    description: Tomcat installation home directory
    value: tomcat-home
  - type: xlrelease.StringVariable
    key: tomcatStartCommand
    description: Command to start the tomcat server
    value: systemctl start tomcat
  - type: xlrelease.StringVariable
    key: tomcatStatusCommand
    value: systemctl status tomcat
  - type: xlrelease.StringVariable
    key: tomcatStatusExptectedOutput
    description: Output of status command to expect to determine running state
    value: active (running)
  - type: xlrelease.StringVariable
    key: tomcatStopCommand
    description: Command to stop Tomcat server
    value: systemctl stop tomcat
  - type: xlrelease.StringVariable
    key: databaseUrl
    description: JDBC url on the DB connection
    value: database url
  - type: xlrelease.StringVariable
    key: databaseDriverClassName
    description: JDBC driver class name
    value: database-driver-class-name
  - type: xlrelease.StringVariable
    key: datasourceContext
    description: The data source context
    value: datasource-context
  - type: xlrelease.StringVariable
    key: dbPassword
    description: Database password
    value: db-password
  - type: xlrelease.StringVariable
    key: dbUsername
    description: Database username
    value: db-username
  - type: xlrelease.StringVariable
    key: jndiName
    description: JNDI name
    value: jndi-name
  - type: xlrelease.StringVariable
    key: serverName
    description: Name of Tomcat Server CI in Deploy
    value: tomcat-server
  - type: xlrelease.StringVariable
    key: virtualHostName
    description: The tomacat virtual hostname in Deploy
    value: virtual-host
  - type: xlrelease.StringVariable
    key: datasourceName
    description: The name of the datasource to create
    value: sample-datasource
  - type: xlrelease.ReferenceVariable
    key: deployServer
    showOnReleaseStart: false
    label: Deploy Server
    description: Connection to the Deploy Server
    referencedType: digitalai.DeployServer
  - type: xlrelease.StringVariable
    key: managedApplicationId
    requiresValue: false
    showOnReleaseStart: false
    label: Application ID
    description: Application ID in Digital.ai Release
  disableNotifications: true
  author: Digital.ai
  logo:
    type: xlrelease.TemplateLogo
    contentType: image/svg+xml
    file: !file "template-logo/9a6971f732677b76071b3d996d2cbb1d77fb617a/deploy.svg"
  defaultTargetFolder: Digital.ai - Official/Workflow Executions
